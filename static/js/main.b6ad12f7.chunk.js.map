{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","username","name","avatar","location","repos","followers","following","homeUrl","notFound","url","fetch","then","res","json","data","setState","login","avatar_url","company","public_repos","html_url","message","catch","error","console","log","this","fetchProfile","id","bind","className","href","React","Component","SearchProfile","value","handleChange","handleSubmit","onSubmit","type","placeholder","onChange","event","target","preventDefault","Profile","repositories","src","alt","rel","title","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6ad12f7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { FaMapMarkerAlt } from 'react-icons/fa';\nimport { FaReact } from 'react-icons/fa';\nimport { FaGithub } from 'react-icons/fa';\n\nconst API = 'https://api.github.com/users';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'jchicano',\n      name: '',\n      avatar: '',\n      location: '',\n      repos: '',\n      followers: '',\n      following: '',\n      homeUrl: '',\n      notFound: '',\n    };\n  }\n  fetchProfile(username) {\n    let url = `${API}/${username}`;\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          username: data.login,\n          name: data.name,\n          avatar: data.avatar_url,\n          company: data.company,\n          location: data.location,\n          repos: data.public_repos,\n          followers: data.followers,\n          following: data.following,\n          homeUrl: data.html_url,\n          notFound: data.message,\n        });\n      })\n      .catch((error) => console.log('Oops! . There Is A Problem'));\n  }\n  componentDidMount() {\n    this.fetchProfile(this.state.username);\n  }\n  render() {\n    return (\n      <div>\n        <section id=\"card\">\n          <SearchProfile fetchProfile={this.fetchProfile.bind(this)} />\n          <Profile data={this.state} />\n        </section>\n        <span className=\"bottom\">\n          Powered by <FaReact /> <a href=\"https://reactjs.com\">React</a> &{' '}\n          <FaGithub /> <a href=\"https://docs.github.com/en/rest\">GitHub API</a>\n        </span>\n      </div>\n      // https://codepen.io/theham3d/pen/wGzodM\n    );\n  }\n}\nclass SearchProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"search-container\">\n        <form className=\"searchbox\" onSubmit={this.handleSubmit.bind(this)}>\n          <input\n            type=\"search\"\n            placeholder=\"Type Username + Enter\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n      // https://codepen.io/menelaosly/pen/rZddyb\n    );\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let username = this.state.value;\n    this.props.fetchProfile(username);\n    this.setState({ value: '' });\n  }\n}\n\nclass Profile extends React.Component {\n  render() {\n    let data = this.props.data;\n    let followers = `${data.homeUrl}?tab=followers`;\n    let repositories = `${data.homeUrl}?tab=repositories`;\n    let following = `${data.homeUrl}?tab=following`;\n    if (data.notFound === 'Not Found')\n      return (\n        <div className=\"box-wrapper\">\n          <div className=\"box\">\n            <div className=\"box-inner\">\n              <h3 className=\"name\">Oops!</h3>\n              <h4 className=\"company\">Username not found</h4>\n            </div>\n          </div>\n        </div>\n      );\n    else\n      return (\n        <div className=\"box-wrapper\">\n          <div className=\"box\">\n            <div className=\"avatar\">\n              <img src={data.avatar} alt={data.username} />\n            </div>\n            <div className=\"box-inner\">\n              <h3 className=\"name\">{data.name || data.username}</h3>\n              <h4 className=\"company\">{data.company}</h4>\n              <p className=\"location\">\n                <FaMapMarkerAlt /> {data.location || 'The Internet'}\n              </p>\n              <div className=\"profile-stats\">\n                <ul>\n                  <li>\n                    <a\n                      href={followers}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      title=\"Number Of Followers\"\n                    >\n                      <i>{data.followers}</i>\n                      <span>Followers</span>\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href={repositories}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      title=\"Number Of Repositories\"\n                    >\n                      <i>{data.repos}</i>\n                      <span>Repositories</span>\n                    </a>\n                  </li>\n                  <li>\n                    <a\n                      href={following}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      title=\"Number Of Following\"\n                    >\n                      <i>{data.following}</i>\n                      <span>Following</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        // https://codepen.io/remtsoy/pen/ktJHD\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}